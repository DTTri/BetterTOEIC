openapi: 3.0.0
info:
  title: BetterTOEIC API
  description: API documentation for BetterTOEIC application
  version: 1.0.0
servers:
  - url: http://localhost:8000/api
    description: Local server
  - url: https://bettertoeic-nodejsserver.onrender.com/api
    description: Production server
paths:
  /test/createTest:
    post:
      summary: Create a new test
      tags:
        - Test
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTestDTO'
      responses:
        '201':
          description: Test created successfully
        '400':
          description: Failed to create test
        '500':
          description: Internal server error
  /test/deleteTest/{testId}:
    delete:
      summary: Delete a test
      tags:
        - Test
      parameters:
        - name: testId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Test deleted successfully
        '400':
          description: Failed to delete test
        '500':
          description: Internal server error
  /test/getAllTests:
    get:
      summary: Get all tests
      tags:
        - Test
      responses:
        '200':
          description: Tests fetched successfully
        '400':
          description: Failed to fetch tests
        '500':
          description: Internal server error
  /test/getTestById/{testId}:
    get:
      summary: Get a test by ID
      tags:
        - Test
      parameters:
        - name: testId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Test fetched successfully
        '400':
          description: Failed to fetch test
        '500':
          description: Internal server error
  /test/completeTest/{userId}:
    put:
      summary: Complete a test
      tags:
        - Test
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteTestDTO'
      responses:
        '200':
          description: Test completed successfully
        '400':
          description: Failed to complete test
        '500':
          description: Internal server error
  /test/getTestHistory/{userId}:
    get:
      summary: Get test history by user ID
      tags:
        - Test
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Test history fetched successfully
        '400':
          description: Failed to fetch test history
        '500':
          description: Internal server error
  /test/saveTest:
    put:
      summary: Save a test
      tags:
        - Test
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                testId:
                  type: string
                unsave:
                  type: boolean
      responses:
        '200':
          description: Test saved successfully
        '400':
          description: Failed to save test
        '500':
          description: Internal server error
  /test/getTestsSaved/{userId}:
    get:
      summary: Get saved tests by user ID
      tags:
        - Test
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Saved tests fetched successfully
        '400':
          description: Failed to fetch saved tests
        '500':
          description: Internal server error
  /roadmap/createRoadmapExercise:
    post:
      summary: Create a new roadmap exercise
      tags:
        - Roadmap
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoadmapExerciseDTO'
      responses:
        '201':
          description: Roadmap exercise created successfully
        '400':
          description: Failed to create roadmap exercise
        '500':
          description: Internal server error
  /roadmap/deleteRoadmapExercise/{roadmapExerciseId}:
    delete:
      summary: Delete a roadmap exercise
      tags:
        - Roadmap
      parameters:
        - name: roadmapExerciseId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Roadmap exercise deleted successfully
        '400':
          description: Failed to delete roadmap exercise
        '500':
          description: Internal server error
  /roadmap/getAllRoadmapExercises:
    get:
      summary: Get all roadmap exercises
      tags:
        - Roadmap
      responses:
        '200':
          description: Roadmap exercises fetched successfully
        '400':
          description: Failed to fetch roadmap exercises
        '500':
          description: Internal server error
  /roadmap/getRoadmapExerciseById/{roadmapExerciseId}:
    get:
      summary: Get a roadmap exercise by ID
      tags:
        - Roadmap
      parameters:
        - name: roadmapExerciseId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Roadmap exercise fetched successfully
        '400':
          description: Failed to fetch roadmap exercise
        '500':
          description: Internal server error
  /roadmap/getRoadmapExercisesByPhase/{phase}:
    get:
      summary: Get roadmap exercises by phase
      tags:
        - Roadmap
      parameters:
        - name: phase
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Roadmap exercises fetched successfully
        '400':
          description: Failed to fetch roadmap exercises
        '500':
          description: Internal server error
  /roadmap/completeRoadmapExercise/{userId}:
    put:
      summary: Complete a roadmap exercise
      tags:
        - Roadmap
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteRoadmapExerciseDTO'
      responses:
        '200':
          description: Roadmap exercise completed successfully
        '400':
          description: Failed to complete roadmap exercise
        '500':
          description: Internal server error
  /roadmap/getRoadmapHistory/{userId}:
    get:
      summary: Get roadmap history by user ID
      tags:
        - Roadmap
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Roadmap history fetched successfully
        '400':
          description: Failed to fetch roadmap history
        '500':
          description: Internal server error
  /roadmap/createPersonalRoadmap:
    post:
      summary: Create a personal roadmap
      tags:
        - Roadmap
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePersonalRoadmapDTO'
      responses:
        '201':
          description: Personal roadmap created successfully
        '400':
          description: Failed to create personal roadmap
        '500':
          description: Internal server error
  /practice/createPracticeTest:
    post:
      summary: Create a new practice test
      tags:
        - Practice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePracticeTestDTO'
      responses:
        '201':
          description: Practice test created successfully
        '400':
          description: Failed to create practice test
        '500':
          description: Internal server error
  /practice/deletePracticeTest/{practiceTestId}:
    delete:
      summary: Delete a practice test
      tags:
        - Practice
      parameters:
        - name: practiceTestId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Practice test deleted successfully
        '400':
          description: Failed to delete practice test
        '500':
          description: Internal server error
  /practice/getAllPracticeTests:
    get:
      summary: Get all practice tests
      tags:
        - Practice
      responses:
        '200':
          description: Practice tests fetched successfully
        '400':
          description: Failed to fetch practice tests
        '500':
          description: Internal server error
  /practice/getPracticeTestById/{practiceTestId}:
    get:
      summary: Get a practice test by ID
      tags:
        - Practice
      parameters:
        - name: practiceTestId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Practice test fetched successfully
        '400':
          description: Failed to fetch practice test
        '500':
          description: Internal server error
  /practice/getPracticeTestsByPart/{part}:
    get:
      summary: Get practice tests by part
      tags:
        - Practice
      parameters:
        - name: part
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Practice tests fetched successfully
        '400':
          description: Failed to fetch practice tests
        '500':
          description: Internal server error
  /practice/completePracticeTest/{userId}:
    put:
      summary: Complete a practice test
      tags:
        - Practice
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompletePracticeTestDTO'
      responses:
        '200':
          description: Practice test completed successfully
        '400':
          description: Failed to complete practice test
        '500':
          description: Internal server error
  /practice/getPracticeTestHistory/{userId}:
    get:
      summary: Get practice test history by user ID
      tags:
        - Practice
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Practice test history fetched successfully
        '400':
          description: Failed to fetch practice test history
        '500':
          description: Internal server error
  /practice/createPracticeLesson:
    post:
      summary: Create a new practice lesson
      tags:
        - Practice
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePracticeLessonDTO'
      responses:
        '201':
          description: Practice lesson created successfully
        '400':
          description: Failed to create practice lesson
        '500':
          description: Internal server error
  /practice/deletePracticeLesson/{practiceLessonId}:
    delete:
      summary: Delete a practice lesson
      tags:
        - Practice
      parameters:
        - name: practiceLessonId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Practice lesson deleted successfully
        '400':
          description: Failed to delete practice lesson
        '500':
          description: Internal server error
  /practice/getAllPracticeLessons:
    get:
      summary: Get all practice lessons
      tags:
        - Practice
      responses:
        '200':
          description: Practice lessons fetched successfully
        '400':
          description: Failed to fetch practice lessons
        '500':
          description: Internal server error
  /practice/getPracticeLessonById/{practiceLessonId}:
    get:
      summary: Get a practice lesson by ID
      tags:
        - Practice
      parameters:
        - name: practiceLessonId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Practice lesson fetched successfully
        '400':
          description: Failed to fetch practice lesson
        '500':
          description: Internal server error
  /practice/getPracticeLessonsByPart/{part}:
    get:
      summary: Get practice lessons by part
      tags:
        - Practice
      parameters:
        - name: part
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Practice lessons fetched successfully
        '400':
          description: Failed to fetch practice lessons
        '500':
          description: Internal server error
  /practice/completePracticeLesson/{userId}:
    put:
      summary: Complete a practice lesson
      tags:
        - Practice
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompletePracticeLessonDTO'
      responses:
        '200':
          description: Practice lesson completed successfully
        '400':
          description: Failed to complete practice lesson
        '500':
          description: Internal server error
  /practice/getPracticeLessonHistory/{userId}:
    get:
      summary: Get practice lesson history by user ID
      tags:
        - Practice
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Practice lesson history fetched successfully
        '400':
          description: Failed to fetch practice lesson history
        '500':
          description: Internal server error
  /vocab/createVocabTopic:
    post:
      summary: Create a new vocab topic
      tags:
        - Vocab
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVocabTopicDTO'
      responses:
        '201':
          description: Vocab topic created successfully
        '400':
          description: Failed to create vocab topic
        '500':
          description: Internal server error
  /vocab/updateVocabTopic/{topicId}:
    put:
      summary: Update a vocab topic
      tags:
        - Vocab
      parameters:
        - name: topicId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVocabTopicDTO'
      responses:
        '200':
          description: Vocab topic updated successfully
        '400':
          description: Failed to update vocab topic
        '500':
          description: Internal server error
  /vocab/deleteVocabTopic/{topicId}:
    delete:
      summary: Delete a vocab topic
      tags:
        - Vocab
      parameters:
        - name: topicId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Vocab topic deleted successfully
        '400':
          description: Failed to delete vocab topic
        '500':
          description: Internal server error
  /vocab/getAllVocabTopics:
    get:
      summary: Get all vocab topics
      tags:
        - Vocab
      responses:
        '200':
          description: Vocab topics fetched successfully
        '400':
          description: Failed to fetch vocab topics
        '500':
          description: Internal server error
  /vocab/getVocabTopicById/{topicId}:
    get:
      summary: Get a vocab topic by ID
      tags:
        - Vocab
      parameters:
        - name: topicId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Vocab topic fetched successfully
        '400':
          description: Failed to fetch vocab topic
        '500':
          description: Internal server error
  /vocab/completeVocabTopic/{userId}:
    put:
      summary: Complete a vocab topic
      tags:
        - Vocab
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteVocabDTO'
      responses:
        '200':
          description: Vocab topic completed successfully
        '400':
          description: Failed to complete vocab topic
        '500':
          description: Internal server error
  /vocab/getVocabHistory/{userId}:
    get:
      summary: Get vocab history by user ID
      tags:
        - Vocab
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Vocab history fetched successfully
        '400':
          description: Failed to fetch vocab history
        '500':
          description: Internal server error
  /vocab/saveVocab/{userId}:
    put:
      summary: Save a vocab
      tags:
        - Vocab
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveVocabDTO'
      responses:
        '200':
          description: Vocab saved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  EC:
                    type: integer
                    example: 0
                  EM:
                    type: string
                    example: Vocab saved successfully
        '400':
          description: Failed to save vocab
          content:
            application/json:
              schema:
                type: object
                properties:
                  EC:
                    type: integer
                    example: 2
                  EM:
                    type: string
                    example: Failed to save vocab
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  EC:
                    type: integer
                    example: 3
                  EM:
                    type: string
                    example: Internal server error

  /vocab/getVocabsSaved/{userId}:
    get:
      summary: Get saved vocabs
      tags:
        - Vocab
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Vocabs saved fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  EC:
                    type: integer
                    example: 0
                  EM:
                    type: string
                    example: Vocabs saved fetched successfully
                  DT:
                    type: array
                    items:
                      $ref: '#/components/schemas/Vocab'
        '400':
          description: Failed to fetch vocabs saved
          content:
            application/json:
              schema:
                type: object
                properties:
                  EC:
                    type: integer
                    example: 2
                  EM:
                    type: string
                    example: Failed to fetch vocabs saved
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  EC:
                    type: integer
                    example: 3
                  EM:
                    type: string
                    example: Internal server error

  /auth/register:
    post:
      summary: Register a new user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Validation errors or internal server error

  /auth/login:
    post:
      summary: Login a user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
        '400':
          description: Validation errors or incorrect password

  /auth/google-login:
    post:
      summary: Login a user using Google
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                name:
                  type: string
                profileImg:
                  type: string
      responses:
        '200':
          description: Login successful
        '400':
          description: Internal server error

  /auth/forgot-password:
    post:
      summary: Initiate forgot password process
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Reset password email sent successfully
        '400':
          description: Validation errors or user not found

  /auth/reset-password:
    post:
      summary: Reset user password
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newPassword:
                  type: string
                confirmNewPassword:
                  type: string
                token:
                  type: string
      responses:
        '200':
          description: Password reset successfully
        '400':
          description: Validation errors or invalid token

  /auth/verify-email:
    post:
      summary: Verify user email
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Email verified successfully
        '400':
          description: Validation errors or invalid token

  /auth/refresh-token:
    post:
      summary: Refresh access token
      tags:
        - Auth
      responses:
        '200':
          description: Access token refreshed successfully
        '401':
          description: Refresh token is required
        '403':
          description: Invalid refresh token

  /auth/send-verification-email:
    post:
      summary: Send verification email
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                _id:
                  type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Verification email sent successfully
        '400':
          description: Email already verified or user not found

  /user/:
    get:
      summary: Get all users
      tags:
        - User
      responses:
        '200':
          description: Users fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  EC:
                    type: integer
                    example: 0
                  EM:
                    type: string
                    example: Users fetched successfully
                  DT:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
        '400':
          description: Failed to fetch users
          content:
            application/json:
              schema:
                type: object
                properties:
                  EC:
                    type: integer
                    example: 2
                  EM:
                    type: string
                    example: Failed to fetch users
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  EC:
                    type: integer
                    example: 1
                  EM:
                    type: string
                    example: Internal server error

  /user/{userId}:
    patch:
      summary: Update a user
      tags:
        - User
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                avatar:
                  type: string
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  EC:
                    type: integer
                    example: 0
                  EM:
                    type: string
                    example: User updated successfully
        '400':
          description: Validation errors or user not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  EC:
                    type: integer
                    example: 1
                  EM:
                    type: string
                    example: User not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  EC:
                    type: integer
                    example: 3
                  EM:
                    type: string
                    example: Internal server error

  /forum/createPost:
    post:
      summary: Create a new post
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePostDTO'
      responses:
        '201':
          description: Post created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          description: Failed to create post
        '500':
          description: Internal server error

  /forum/updatePost/{postId}:
    put:
      summary: Update an existing post
      tags:
        - Forum
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '200':
          description: Post updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          description: Post not found or content is required
        '500':
          description: Internal server error

  /forum/deletePost/{postId}:
    delete:
      summary: Delete a post
      tags:
        - Forum
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Post deleted successfully
        '400':
          description: Post not found
        '500':
          description: Internal server error

  /forum/getAllPosts:
    get:
      summary: Get all posts
      tags:
        - Forum
      responses:
        '200':
          description: Posts fetched successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
        '400':
          description: Failed to fetch posts
        '500':
          description: Internal server error

  /forum/getPostById/{postId}:
    get:
      summary: Get a post by ID
      tags:
        - Forum
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Post fetched successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          description: Post not found
        '500':
          description: Internal server error

  /forum/likePost/{postId}:
    put:
      summary: Like a post
      tags:
        - Forum
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Post liked successfully
        '400':
          description: Post not found
        '500':
          description: Internal server error

  /forum/createComment/{postId}:
    post:
      summary: Create a new comment
      tags:
        - Forum
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCommentDTO'
      responses:
        '201':
          description: Comment created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '400':
          description: Post not found
        '500':
          description: Internal server error

  /forum/updateComment/{postId}/{commentId}:
    put:
      summary: Update an existing comment
      tags:
        - Forum
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: string
        - name: commentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '201':
          description: Comment updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '400':
          description: Post or comment not found
        '500':
          description: Internal server error

  /forum/deleteComment/{postId}/{commentId}:
    delete:
      summary: Delete a comment
      tags:
        - Forum
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: string
        - name: commentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Comment deleted successfully
        '400':
          description: Post or comment not found
        '500':
          description: Internal server error

  /forum/likeComment/{postId}/{commentId}:
    put:
      summary: Like a comment
      tags:
        - Forum
      parameters:
        - name: postId
          in: path
          required: true
          schema:
            type: string
        - name: commentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Comment liked successfully
        '400':
          description: Post or comment not found
        '500':
          description: Internal server error

  # SWTest endpoints
  /swtest/createSWTest:
    post:
      summary: Create a new Speaking and Writing test
      tags:
        - SWTest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSWTestDTO'
            example:
              title: 'TOEIC Speaking and Writing Test 1'
              description: 'Complete Speaking and Writing practice test'
              created_by: 'admin'
              difficulty: 'Intermediate'
              questions: [
                  # Speaking Part 1 (Questions 1-2): Read a text aloud
                  {
                    question_number: 1,
                    text: 'Read the text aloud.',
                    passage: "Hi. This is Myra Peters calling about my appointment with Dr. Jones. I have a three o'clock appointment scheduled for this afternoon. Unfortunately, I won't be able to keep it because of an important meeting at work. So, I'll need to reschedule. I was hoping to come in sometime next week. Any time Monday, Tuesday, or Wednesday afternoon would work for me. I hope the doctor has some time available on one of those days. Please call me back and let me know.",
                    part: 1,
                  },
                  {
                    question_number: 2,
                    text: 'Read the text aloud.',
                    passage: 'Our speaker tonight is Mr. John Wilson, who has just returned from traveling in South America. Mr. Wilson spent his trip photographing scenes of small-town life across the continent. His work is well known around the world, and his photography has been featured in numerous newspapers, magazines, and books. Tonight he will share with us photographs and stories from his recent trip and will answer any questions you may have. Due to time constraints, we ask you to hold your questions until the end of the talk.',
                    part: 1,
                  },

                  # Speaking Part 2 (Questions 3-4): Describe a picture
                  {
                    question_number: 3,
                    text: 'Describe the picture in as much detail as possible.',
                    passage: 'In this question, you will look at a picture on your screen. You will have 30 seconds to prepare your response. Then you will have 45 seconds to speak about the picture.',
                    image: ['https://jaxtina.com/wp-content/uploads/2021/10/TOEIC-Speaking-Question-3-1.jpg'],
                    part: 2,
                  },
                  {
                    question_number: 4,
                    text: 'Describe the picture in as much detail as possible.',
                    passage: 'In this question, you will look at a picture on your screen. You will have 30 seconds to prepare your response. Then you will have 45 seconds to speak about the picture.',
                    image: ['https://media.zim.vn/610aa95592067e001e3dde36/TOEIC-Speaking-Describe-a-picture-_-6.jpg'],
                    part: 2,
                  },

                  # Speaking Part 3 (Questions 5-7): Respond to questions
                  {
                    question_number: 5,
                    text: 'What sports do you enjoy playing?',
                    passage: 'Imagine that a research firm is doing a telephone survey of people in your city. You have agreed to answer some questions about sports.',
                    part: 3,
                  },
                  {
                    question_number: 6,
                    text: 'How often do you usually play sports?',
                    passage: 'Imagine that a research firm is doing a telephone survey of people in your city. You have agreed to answer some questions about sports.',
                    part: 3,
                  },
                  {
                    question_number: 7,
                    text: 'Do you think it is important for children to play sports? Why or why not?',
                    passage: 'Imagine that a research firm is doing a telephone survey of people in your city. You have agreed to answer some questions about sports.',
                    part: 3,
                  },

                  # Speaking Part 4 (Questions 8-10): Respond to questions with information provided
                  {
                    question_number: 8,
                    text: 'What qualifications does the caller have that make him a good candidate for the chef position?',
                    passage: 'Maple City Restaurant is looking for a new chef. Read the advertisement for the position. Then listen to the telephone message. (Telephone message would be provided as audio)',
                    image: ['https://example.com/restaurant_ad.jpg'],
                    question_audio: 'https://example.com/question8_audio.mp3',
                    part: 4,
                  },
                  {
                    question_number: 9,
                    text: 'Why is the caller interested in working at Maple City Restaurant?',
                    passage: 'Maple City Restaurant is looking for a new chef. Read the advertisement for the position. Then listen to the telephone message.',
                    question_audio: 'https://example.com/question9_audio.mp3',
                    part: 4,
                  },
                  {
                    question_number: 10,
                    text: 'When would the caller be available for an interview?',
                    passage: 'Maple City Restaurant is looking for a new chef. Read the advertisement for the position. Then listen to the telephone message.',
                    question_audio: 'https://example.com/question10_audio.mp3',
                    part: 4,
                  },

                  # Speaking Part 5 (Question 11): Express an opinion
                  {
                    question_number: 11,
                    text: 'Some people prefer to take public transportation to work rather than drive their own car. Others believe that driving their own car is better. Which do you think is better and why?',
                    passage: 'In this question, you will be asked to give your opinion about a specific topic. Be sure to say as much as you can in the time allowed.',
                    question_audio: 'https://example.com/question11_audio.mp3',
                    part: 5,
                  },

                  # Writing Part 6 (Questions 12-16): Write a sentence based on a picture
                  {
                    question_number: 12,
                    text: 'Write ONE sentence that describes this picture.',
                    passage: 'Look at the picture and write ONE sentence that describes this picture. Your sentence should be clear and descriptive.',
                    image:
                      [
                        'https://www.ets.org/content/dam/ets-org/images/tests/toeic/toeic-writing-sample-question-1.jpg',
                      ],
                    part: 6,
                  },
                  {
                    question_number: 13,
                    text: 'Write ONE sentence that describes this picture.',
                    passage: 'Look at the picture and write ONE sentence that describes this picture. Your sentence should be clear and descriptive.',
                    image: ['https://example.com/writing_image2.jpg'],
                    part: 6,
                  },
                  {
                    question_number: 14,
                    text: 'Write ONE sentence that describes this picture.',
                    passage: 'Look at the picture and write ONE sentence that describes this picture. Your sentence should be clear and descriptive.',
                    image: ['https://example.com/writing_image3.jpg'],
                    part: 6,
                  },
                  {
                    question_number: 15,
                    text: 'Write ONE sentence that describes this picture.',
                    passage: 'Look at the picture and write ONE sentence that describes this picture. Your sentence should be clear and descriptive.',
                    image: ['https://example.com/writing_image4.jpg'],
                    part: 6,
                  },
                  {
                    question_number: 16,
                    text: 'Write ONE sentence that describes this picture.',
                    passage: 'Look at the picture and write ONE sentence that describes this picture. Your sentence should be clear and descriptive.',
                    image: ['https://example.com/writing_image5.jpg'],
                    part: 6,
                  },

                  # Writing Part 7 (Questions 17-18): Respond to a written request
                  {
                    question_number: 17,
                    text: 'Write a response to the email. In your response, give your opinion and supporting reasons.',
                    passage: 'From: Dale City Welcome Committee\nTo: New Dale City Residents\nSubject: Welcome to Dale City\n\nDear New Residents,\n\nAs chairperson of the Dale City Welcome Committee, I would like to welcome you to our city. Our committee is organizing a special meeting for new residents on May 25 at the City Hall. At the meeting, you will receive information about the city and the services it offers.\n\nWe would like to know what specific information about the city you are interested in learning. Is there anything specific about Dale City that you would like us to present at the meeting?\n\nWe look forward to meeting you on May 25.\n\nSincerely,\nBarbara Smith\nChairperson\nDale City Welcome Committee',
                    part: 7,
                  },
                  {
                    question_number: 18,
                    text: 'Write a response to the email. In your response, give your opinion and supporting reasons.',
                    passage: 'From: Human Resources Department\nTo: All Employees\nSubject: Office Dress Code\n\nAs you know, our company has always had a formal dress code, requiring suits and ties for men and professional attire for women. However, we are considering changing to a more casual dress code.\n\nBefore we make this change, we would like to hear from you. Do you think we should change our dress code? Would a more casual dress code positively or negatively affect our work environment?\n\nPlease reply with your opinion on this matter by Friday.\n\nRegards,\nHuman Resources Department',
                    part: 7,
                  },

                  # Writing Part 8 (Question 19): Write an opinion essay
                  {
                    question_number: 19,
                    text: 'Some people believe that it is more important to enjoy your job than to earn a high salary. Others believe that a high salary is more important than job satisfaction. Which do you think is more important: enjoying your job or earning a high salary?',
                    passage: 'Write an essay on the topic. In your essay, be sure to support your opinion with reasons and examples. Use specific reasons and examples to support your answer.',
                    part: 8,
                  },
                ]
      responses:
        '201':
          description: SWTest created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  EM:
                    type: string
                    example: 'SW Test created successfully'
                  EC:
                    type: integer
                    example: 0
                  DT:
                    $ref: '#/components/schemas/SWTest'
        '400':
          description: Failed to create SWTest
          content:
            application/json:
              schema:
                type: object
                properties:
                  EM:
                    type: string
                    example: 'Failed to create SW Test'
                  EC:
                    type: integer
                    example: 3
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  EM:
                    type: string
                    example: 'Internal server error'
                  EC:
                    type: integer
                    example: 4

  /swtest/deleteSWTest/{swTestId}:
    delete:
      summary: Delete a Speaking and Writing test
      tags:
        - SWTest
      parameters:
        - name: swTestId
          in: path
          required: true
          schema:
            type: string
          example: '60f1a5c5e6b3f32d4c9a1234'
      responses:
        '200':
          description: SWTest deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  EM:
                    type: string
                    example: 'SW Test deleted successfully'
                  EC:
                    type: integer
                    example: 0
        '400':
          description: Failed to delete SWTest
          content:
            application/json:
              schema:
                type: object
                properties:
                  EM:
                    type: string
                    example: 'Failed to delete SW Test'
                  EC:
                    type: integer
                    example: 1
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  EM:
                    type: string
                    example: 'Internal server error'
                  EC:
                    type: integer
                    example: 2

  /swtest/getAllSWTests:
    get:
      summary: Get all Speaking and Writing tests
      tags:
        - SWTest
      responses:
        '200':
          description: SWTests fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  EM:
                    type: string
                    example: 'SW Tests fetched successfully'
                  EC:
                    type: integer
                    example: 0
                  DT:
                    type: array
                    items:
                      $ref: '#/components/schemas/SWTest'
        '400':
          description: Failed to fetch SWTests
          content:
            application/json:
              schema:
                type: object
                properties:
                  EM:
                    type: string
                    example: 'Failed to fetch SW Tests'
                  EC:
                    type: integer
                    example: 1
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  EM:
                    type: string
                    example: 'Internal server error'
                  EC:
                    type: integer
                    example: 2

  /swtest/getSWTestById/{swTestId}:
    get:
      summary: Get a Speaking and Writing test by ID
      tags:
        - SWTest
      parameters:
        - name: swTestId
          in: path
          required: true
          schema:
            type: string
          example: '60f1a5c5e6b3f32d4c9a1234'
      responses:
        '200':
          description: SWTest fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  EM:
                    type: string
                    example: 'SW Test fetched successfully'
                  EC:
                    type: integer
                    example: 0
                  DT:
                    $ref: '#/components/schemas/SWTest'
        '400':
          description: Failed to fetch SWTest
          content:
            application/json:
              schema:
                type: object
                properties:
                  EM:
                    type: string
                    example: 'Failed to fetch SW Test'
                  EC:
                    type: integer
                    example: 1
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  EM:
                    type: string
                    example: 'Internal server error'
                  EC:
                    type: integer
                    example: 2

  /swtest/completeSWTest/{userId}:
    put:
      summary: Complete a Speaking and Writing test
      description: Submit answers for a Speaking and Writing test. For speaking questions, the answers should be S3 URLs to audio files. For writing questions, the answers should be text.
      tags:
        - SWTest
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          example: '60f1a5c5e6b3f32d4c9a5678'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteSWTestDTO'
            example:
              testId: '60f1a5c5e6b3f32d4c9a1234'
              answers: [
                  # Speaking Part 1 (Questions 1-2): Read a text aloud - Audio URLs
                  'https://bettertoeic-uploads.s3.amazonaws.com/speaking_q1_audio.mp3',
                  'https://bettertoeic-uploads.s3.amazonaws.com/speaking_q2_audio.mp3',

                  # Speaking Part 2 (Questions 3-4): Describe a picture - Audio URLs
                  'https://bettertoeic-uploads.s3.amazonaws.com/speaking_q3_audio.mp3',
                  'https://bettertoeic-uploads.s3.amazonaws.com/speaking_q4_audio.mp3',

                  # Speaking Part 3 (Questions 5-7): Respond to questions - Audio URLs
                  'https://bettertoeic-uploads.s3.amazonaws.com/speaking_q5_audio.mp3',
                  'https://bettertoeic-uploads.s3.amazonaws.com/speaking_q6_audio.mp3',
                  'https://bettertoeic-uploads.s3.amazonaws.com/speaking_q7_audio.mp3',

                  # Speaking Part 4 (Questions 8-10): Respond to questions with information provided - Audio URLs
                  'https://bettertoeic-uploads.s3.amazonaws.com/speaking_q8_audio.mp3',
                  'https://bettertoeic-uploads.s3.amazonaws.com/speaking_q9_audio.mp3',
                  'https://bettertoeic-uploads.s3.amazonaws.com/speaking_q10_audio.mp3',

                  # Speaking Part 5 (Question 11): Express an opinion - Audio URL
                  'https://bettertoeic-uploads.s3.amazonaws.com/speaking_q11_audio.mp3',

                  # Writing Part 6 (Questions 12-16): Write a sentence based on a picture - Text answers
                  'The mechanic is teaching a new employee how to repair a car engine.',
                  'The man is fixing his bicycle on the street.',
                  'The woman is sitting at her desk working on a computer.',
                  'The woman is wearing a business suit for her interview.',
                  'The child is walking barefoot on the beach although it is cold.',

                  # Writing Part 7 (Questions 17-18): Respond to a written request - Text answers
                  'Dear Mr. Pinkney, I am writing to inform you that I cannot attend the meeting on Friday morning due to a prior commitment. I suggest we either reschedule the meeting to Friday afternoon or conduct the meeting virtually so everyone can participate. Please let me know what works best for the team. Regards, John Smith',
                  'Dear Journal of Business News, I am interested in subscribing to your publication. Could you please provide information about the subscription duration options? Also, is there a digital version available? Finally, do you offer any additional discounts for long-term subscriptions? Thank you for your assistance. Regards, Jane Doe',

                  # Writing Part 8 (Question 19): Write an opinion essay - Text answer
                  'I strongly believe that enjoying your job is more important than earning a high salary. When people work in a field they are passionate about, they tend to be more motivated, productive, and satisfied with their lives. For example, my friend chose to become a teacher despite the relatively low pay because she loves working with children. She finds fulfillment in helping students learn and grow, which no amount of money could provide. Additionally, spending 40+ hours per week at a job you dislike just for the money can lead to stress, burnout, and even health problems. Research has shown that job satisfaction correlates more strongly with overall happiness than income level. While financial stability is certainly important, there are many moderately-paying careers that can provide both sufficient income and personal satisfaction. In conclusion, pursuing work that aligns with your interests and values will likely lead to greater long-term happiness than choosing a career solely based on salary.',
                ]
      responses:
        '200':
          description: SWTest evaluated and saved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  EM:
                    type: string
                    example: 'SW Test evaluated and saved successfully'
                  EC:
                    type: integer
                    example: 0
                  DT:
                    type: object
                    properties:
                      testId:
                        type: string
                        example: '60f1a5c5e6b3f32d4c9a1234'
                      evaluations:
                        type: array
                        items:
                          type: string
                        example:
                          [
                            'The response demonstrates good fluency and pronunciation...',
                            'The writing shows good organization but has some grammar issues...',
                          ]
                      sampleAnswers:
                        type: array
                        items:
                          type: string
                        example: ['A more complete response would be...', 'A better organized response would be...']
                      scores:
                        type: array
                        items:
                          type: number
                        example: [4, 3]
                      transcriptions:
                        type: array
                        items:
                          type: string
                        example:
                          [
                            'This is the transcription of the first audio response',
                            'This is the transcription of the second audio response',
                          ]
        '400':
          description: Failed to complete SWTest
          content:
            application/json:
              schema:
                type: object
                properties:
                  EM:
                    type: string
                    example: 'Failed to complete SW Test'
                  EC:
                    type: integer
                    example: 4
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  EM:
                    type: string
                    example: 'Internal server error'
                  EC:
                    type: integer
                    example: 4

  /swtest/getSWTestHistory/{userId}:
    get:
      summary: Get Speaking and Writing test history by user ID
      tags:
        - SWTest
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          example: '60f1a5c5e6b3f32d4c9a5678'
      responses:
        '200':
          description: SWTest history fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  EM:
                    type: string
                    example: 'SW Test history fetched successfully'
                  EC:
                    type: integer
                    example: 0
                  DT:
                    $ref: '#/components/schemas/SWTestHistory'
        '400':
          description: Failed to fetch SWTest history
          content:
            application/json:
              schema:
                type: object
                properties:
                  EM:
                    type: string
                    example: 'Failed to fetch SW Test history'
                  EC:
                    type: integer
                    example: 1
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  EM:
                    type: string
                    example: 'Internal server error'
                  EC:
                    type: integer
                    example: 2

  /swtest/updateSWTestEvaluation/{userId}:
    put:
      summary: Update Speaking and Writing test evaluation
      tags:
        - SWTest
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
          example: '60f1a5c5e6b3f32d4c9a5678'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                testId:
                  type: string
                evaluations:
                  type: array
                  items:
                    type: string
                sampleAnswers:
                  type: array
                  items:
                    type: string
                scores:
                  type: array
                  items:
                    type: number
            example:
              testId: '60f1a5c5e6b3f32d4c9a1234'
              evaluations:
                [
                  'The response demonstrates good fluency and pronunciation...',
                  'The writing shows good organization but has some grammar issues...',
                ]
              sampleAnswers: ['A more complete response would be...', 'A better organized response would be...']
              scores: [4, 3]
      responses:
        '200':
          description: SWTest evaluation updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  EM:
                    type: string
                    example: 'SW Test evaluation updated successfully'
                  EC:
                    type: integer
                    example: 0
        '400':
          description: Failed to update SWTest evaluation
          content:
            application/json:
              schema:
                type: object
                properties:
                  EM:
                    type: string
                    example: 'Failed to update SW Test evaluation'
                  EC:
                    type: integer
                    example: 1
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  EM:
                    type: string
                    example: 'Internal server error'
                  EC:
                    type: integer
                    example: 2
components:
  schemas:
    SWTest:
      type: object
      properties:
        _id:
          type: string
          example: '60f1a5c5e6b3f32d4c9a1234'
        title:
          type: string
          example: 'TOEIC Speaking and Writing Test 1'
        description:
          type: string
          example: 'Complete Speaking and Writing practice test'
        created_by:
          type: string
          example: 'admin'
        questions:
          type: array
          items:
            $ref: '#/components/schemas/SWQuestion'
        created_at:
          type: string
          format: date-time
          example: '2023-07-15T10:30:00.000Z'
        updated_at:
          type: string
          format: date-time
          example: '2023-07-15T10:30:00.000Z'
        difficulty:
          type: string
          example: 'Intermediate'

    SWQuestion:
      type: object
      properties:
        question_number:
          type: integer
          description: 'The sequential number of the question in the test'
          example: 1
        text:
          type: string
          description: 'The specific question text'
          example: 'What sports do you enjoy playing?'
        passage:
          type: string
          description: 'The information/introduction/context for the question or part'
          example: 'Imagine that a research firm is doing a telephone survey of people in your city. You have agreed to answer some questions about sports.'
        image:
          type: array
          description: 'URLs to images used in the question (especially for Part 2 and Part 6)'
          items:
            type: string
          example: ['https://jaxtina.com/wp-content/uploads/2021/10/TOEIC-Speaking-Question-3-1.jpg']
        part:
          type: integer
          description: 'The part number of the TOEIC Speaking and Writing test (1-8)'
          example: 1
          enum: [1, 2, 3, 4, 5, 6, 7, 8]
        question_audio:
          type: string
          description: 'URL to audio file for questions that include audio prompts'
          example: 'https://example.com/question_audio.mp3'

    SWCompletedTest:
      type: object
      properties:
        testId:
          type: string
          description: 'The ID of the completed test'
          example: '60f1a5c5e6b3f32d4c9a1234'
        answers:
          type: array
          description: 'Array of 19 answers (11 speaking + 8 writing). For speaking questions, these are S3 URLs to audio files. For writing questions, these are text answers.'
          items:
            type: string
          example: [
              # Speaking answers (S3 URLs to audio files)
              'https://bettertoeic-uploads.s3.amazonaws.com/speaking_q1_audio.mp3',
              'https://bettertoeic-uploads.s3.amazonaws.com/speaking_q2_audio.mp3',
              'https://bettertoeic-uploads.s3.amazonaws.com/speaking_q3_audio.mp3',
              'https://bettertoeic-uploads.s3.amazonaws.com/speaking_q4_audio.mp3',
              'https://bettertoeic-uploads.s3.amazonaws.com/speaking_q5_audio.mp3',
              'https://bettertoeic-uploads.s3.amazonaws.com/speaking_q6_audio.mp3',
              'https://bettertoeic-uploads.s3.amazonaws.com/speaking_q7_audio.mp3',
              'https://bettertoeic-uploads.s3.amazonaws.com/speaking_q8_audio.mp3',
              'https://bettertoeic-uploads.s3.amazonaws.com/speaking_q9_audio.mp3',
              'https://bettertoeic-uploads.s3.amazonaws.com/speaking_q10_audio.mp3',
              'https://bettertoeic-uploads.s3.amazonaws.com/speaking_q11_audio.mp3',

              # Writing answers (text)
              'The mechanic is teaching a new employee how to repair a car engine.',
              'The man is fixing his bicycle on the street.',
              'The woman is sitting at her desk working on a computer.',
              'The woman is wearing a business suit for her interview.',
              'The child is walking barefoot on the beach although it is cold.',
              'Dear Mr. Pinkney, I am writing to inform you that I cannot attend the meeting...',
              'Dear Journal of Business News, I am interested in subscribing to your publication...',
              'I strongly believe that enjoying your job is more important than earning a high salary...',
            ]
        evaluations:
          type: array
          description: 'Array of 19 evaluations (11 speaking + 8 writing) generated by the AI model'
          items:
            type: string
          example:
            [
              "The response demonstrates good fluency with clear pronunciation. The speaker effectively communicates the message about rescheduling the appointment, including all key details such as the reason for cancellation and available days for rescheduling. There are minor grammatical errors but they don't impede understanding.",
              'The writing shows good organization with a clear introduction, body paragraphs with examples, and a conclusion. The vocabulary is appropriate and varied. There are some minor grammatical issues with verb tense consistency.',
            ]
        sampleAnswers:
          type: array
          description: 'Array of 19 sample answers (11 speaking + 8 writing) generated by the AI model as examples of better responses'
          items:
            type: string
          example:
            [
              "Hello, this is Myra Peters calling regarding my appointment with Dr. Jones scheduled for 3 PM today. Unfortunately, I need to reschedule due to an important work meeting that has come up. I'm available any afternoon next week - Monday, Tuesday, or Wednesday would work well for me. Please call me back to confirm a new appointment time on one of these days. Thank you.",
              'I believe that job satisfaction is more important than a high salary for several reasons. First, spending 40+ hours weekly at a job you enjoy leads to better mental health and overall life satisfaction. Second, passion for your work typically results in better performance and career advancement opportunities. While financial stability is necessary, research shows that beyond meeting basic needs, additional income has diminishing returns on happiness. For example, many teachers choose their profession despite modest salaries because they find fulfillment in educating future generations. In conclusion, pursuing meaningful work that aligns with your values and interests contributes more to long-term happiness than prioritizing salary alone.',
            ]
        scores:
          type: array
          description: 'Array of 19 scores (11 speaking + 8 writing) on a scale of 0-5, where 0 is the lowest and 5 is the highest'
          items:
            type: number
          example: [4, 3, 5, 4, 3, 4, 4, 3, 4, 5, 4, 3, 4, 5, 4, 3, 4, 5, 4]
        transcriptions:
          type: array
          description: 'Array of 11 transcriptions of the speaking answers, generated by the speech-to-text model'
          items:
            type: string
          example:
            [
              "Hi, this is Myra Peters calling about my appointment with Dr. Jones. I have a three o'clock appointment scheduled for this afternoon. Unfortunately I won't be able to keep it because of an important meeting at work. So I'll need to reschedule. I was hoping to come in sometime next week. Any time Monday, Tuesday or Wednesday afternoon would work for me. I hope the doctor has some time available on one of those days. Please call me back and let me know.",
              'Our speaker tonight is Mr. John Wilson who has just returned from traveling in South America. Mr. Wilson spent his trip photographing scenes of small town life across the continent.',
            ]
        attempted_at:
          type: string
          description: 'The date and time when the test was attempted'
          format: date-time
          example: '2023-07-15T11:30:00.000Z'

    SWTestHistory:
      type: object
      properties:
        _id:
          type: string
          description: 'The user ID who owns this test history'
          example: '60f1a5c5e6b3f32d4c9a5678'
        completedTests:
          type: array
          description: 'Array of completed Speaking and Writing tests by this user'
          items:
            $ref: '#/components/schemas/SWCompletedTest'
          example:
            [
              {
                'testId': '60f1a5c5e6b3f32d4c9a1234',
                'answers':
                  [
                    'https://bettertoeic-uploads.s3.amazonaws.com/speaking_q1_audio.mp3',
                    'https://bettertoeic-uploads.s3.amazonaws.com/speaking_q2_audio.mp3',
                    '...',
                  ],
                'evaluations': ['The response demonstrates good fluency with clear pronunciation...', '...'],
                'sampleAnswers': ['Hello, this is Myra Peters calling regarding my appointment...', '...'],
                'scores': [4, 3, 5, 4, 3, 4, 4, 3, 4, 5, 4, 3, 4, 5, 4, 3, 4, 5, 4],
                'attempted_at': '2023-07-15T11:30:00.000Z',
              },
              {
                'testId': '60f1a5c5e6b3f32d4c9a5679',
                'answers': ['...'],
                'evaluations': ['...'],
                'sampleAnswers': ['...'],
                'scores': [3, 4, 4, 3, 5, 4, 3, 4, 5, 4, 3, 4, 5, 4, 3, 4, 5, 4, 3],
                'attempted_at': '2023-07-20T14:45:00.000Z',
              },
            ]
        created_at:
          type: string
          description: 'The date and time when the test history was created'
          format: date-time
          example: '2023-07-15T10:30:00.000Z'
        updated_at:
          type: string
          description: 'The date and time when the test history was last updated'
          format: date-time
          example: '2023-07-20T14:45:00.000Z'

    CreateSWTestDTO:
      type: object
      required:
        - title
        - description
        - created_by
        - difficulty
        - questions
      properties:
        title:
          type: string
          description: 'The title of the Speaking and Writing test'
          example: 'TOEIC Speaking and Writing Test 1'
        description:
          type: string
          description: 'A brief description of the test'
          example: 'Complete Speaking and Writing practice test covering all 8 parts'
        created_by:
          type: string
          description: 'The ID of the user who created the test (usually an admin)'
          example: 'admin'
        difficulty:
          type: string
          description: 'The difficulty level of the test'
          example: 'Intermediate'
          enum: ['Beginner', 'Intermediate', 'Advanced']
        questions:
          type: array
          description: 'Array of 19 questions (11 speaking + 8 writing) following the TOEIC S&W format'
          items:
            $ref: '#/components/schemas/SWQuestion'
          example: [
              # Speaking Part 1: Read a text aloud (Questions 1-2)
              {
                'question_number': 1,
                'text': "Hi. This is Myra Peters calling about my appointment with Dr. Jones. I have a three o'clock appointment scheduled for this afternoon. Unfortunately, I won't be able to keep it because of an important meeting at work. So, I'll need to reschedule. I was hoping to come in sometime next week. Any time Monday, Tuesday, or Wednesday afternoon would work for me. I hope the doctor has some time available on one of those days. Please call me back and let me know.",
                'part': 1,
              },

              # Speaking Part 2: Describe a picture (Questions 3-4)
              {
                'question_number': 3,
                'text': 'In this question, you will describe the picture on your screen in as much detail as possible.',
                'images': ['https://jaxtina.com/wp-content/uploads/2021/10/TOEIC-Speaking-Question-3-1.jpg'],
                'part': 2,
              },

              # Speaking Part 3: Respond to questions (Questions 5-7)
              {
                'question_number': 5,
                'text': 'Imagine that a research firm is doing a telephone survey of people in your city. You have agreed to answer some questions about sports.',
                'passages': ['What sports do you enjoy playing?'],
                'part': 3,
              },

              # Writing Part 6: Write a sentence based on a picture (Questions 12-16)
              {
                'question_number': 12,
                'text': 'Write ONE sentence that describes this picture.',
                'images':
                  ['https://www.ets.org/content/dam/ets-org/images/tests/toeic/toeic-writing-sample-question-1.jpg'],
                'part': 6,
              },
            ]

    CompleteSWTestDTO:
      type: object
      required:
        - testId
        - answers
      properties:
        testId:
          type: string
          description: 'The ID of the test being completed'
          example: '60f1a5c5e6b3f32d4c9a1234'
        answers:
          type: array
          description: 'Array of 19 answers (11 speaking + 8 writing). For speaking questions, these are S3 URLs to audio files. For writing questions, these are text answers.'
          items:
            type: string
          example: [
              # Speaking Part 1 (Questions 1-2): Read a text aloud - Audio URLs
              'https://bettertoeic-uploads.s3.amazonaws.com/speaking_q1_audio.mp3',
              'https://bettertoeic-uploads.s3.amazonaws.com/speaking_q2_audio.mp3',

              # Speaking Part 2 (Questions 3-4): Describe a picture - Audio URLs
              'https://bettertoeic-uploads.s3.amazonaws.com/speaking_q3_audio.mp3',
              'https://bettertoeic-uploads.s3.amazonaws.com/speaking_q4_audio.mp3',

              # Speaking Part 3 (Questions 5-7): Respond to questions - Audio URLs
              'https://bettertoeic-uploads.s3.amazonaws.com/speaking_q5_audio.mp3',
              'https://bettertoeic-uploads.s3.amazonaws.com/speaking_q6_audio.mp3',
              'https://bettertoeic-uploads.s3.amazonaws.com/speaking_q7_audio.mp3',

              # Speaking Part 4 (Questions 8-10): Respond to questions with information provided - Audio URLs
              'https://bettertoeic-uploads.s3.amazonaws.com/speaking_q8_audio.mp3',
              'https://bettertoeic-uploads.s3.amazonaws.com/speaking_q9_audio.mp3',
              'https://bettertoeic-uploads.s3.amazonaws.com/speaking_q10_audio.mp3',

              # Speaking Part 5 (Question 11): Express an opinion - Audio URL
              'https://bettertoeic-uploads.s3.amazonaws.com/speaking_q11_audio.mp3',

              # Writing Part 6 (Questions 12-16): Write a sentence based on a picture - Text answers
              'The mechanic is teaching a new employee how to repair a car engine.',
              'The man is fixing his bicycle on the street.',
              'The woman is sitting at her desk working on a computer.',
              'The woman is wearing a business suit for her interview.',
              'The child is walking barefoot on the beach although it is cold.',

              # Writing Part 7 (Questions 17-18): Respond to a written request - Text answers
              'Dear Mr. Pinkney, I am writing to inform you that I cannot attend the meeting on Friday morning due to a prior commitment. I suggest we either reschedule the meeting to Friday afternoon or conduct the meeting virtually so everyone can participate. Please let me know what works best for the team. Regards, [Name]',
              'Dear Journal of Business News, I am interested in subscribing to your publication. Could you please provide information about the subscription duration options? Also, is there a digital version available? Finally, do you offer any additional discounts for long-term subscriptions? Thank you for your assistance. Regards, [Name]',

              # Writing Part 8 (Question 19): Write an opinion essay - Text answer
              'I strongly believe that enjoying your job is more important than earning a high salary. When people work in a field they are passionate about, they tend to be more motivated, productive, and satisfied with their lives. For example, my friend chose to become a teacher despite the relatively low pay because she loves working with children. She finds fulfillment in helping students learn and grow, which no amount of money could provide. Additionally, spending 40+ hours per week at a job you dislike just for the money can lead to stress, burnout, and even health problems. Research has shown that job satisfaction correlates more strongly with overall happiness than income level. While financial stability is certainly important, there are many moderately-paying careers that can provide both sufficient income and personal satisfaction. In conclusion, pursuing work that aligns with your interests and values will likely lead to greater long-term happiness than choosing a career solely based on salary.',
            ]

    CreateTestDTO:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        main_audio:
          type: string
        created_by:
          type: string
        isMiniTest:
          type: boolean
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question'
        difficulty:
          type: string
    CompleteTestDTO:
      type: object
      properties:
        testId:
          type: string
        choices:
          type: array
          items:
            type: number
    CreatePracticeTestDTO:
      type: object
      properties:
        part:
          type: number
        main_audio:
          type: string
          nullable: true
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question'
        created_by:
          type: string
    CompletePracticeTestDTO:
      type: object
      properties:
        practiceTestId:
          type: string
        choices:
          type: array
          items:
            type: number
    CreatePracticeLessonDTO:
      type: object
      properties:
        part:
          type: number
        title:
          type: string
        content:
          type: string
        created_by:
          type: string
    CompletePracticeLessonDTO:
      type: object
      properties:
        practiceLessonId:
          type: string
    CreateRoadmapExerciseDTO:
      type: object
      properties:
        phase:
          type: number
        part:
          type: number
        chapter:
          type: number
        created_by:
          type: string
        main_audio:
          type: string
          nullable: true
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question'
    CompleteRoadmapExerciseDTO:
      type: object
      properties:
        roadmapExerciseId:
          type: string
        choices:
          type: array
          items:
            type: number
    CreatePersonalRoadmapDTO:
      type: object
      properties:
        userId:
          type: string
        start_level:
          type: number
        target_level:
          type: number
        current_level:
          type: number
    Question:
      type: object
      properties:
        question_number:
          type: integer
        text:
          type: string
        images:
          type: array
          items:
            type: string
          nullable: true
        passages:
          type: array
          items:
            type: string
          nullable: true
        choices:
          type: array
          items:
            type: integer
          nullable: true
        correct_choice:
          type: integer
        explanation:
          type: string
        question_group_number:
          type: integer
    CreateVocabTopicDTO:
      type: object
      properties:
        name:
          type: string
        image:
          type: string
        vocabs:
          type: array
          items:
            $ref: '#/components/schemas/Vocab'
    SaveVocabDTO:
      type: object
      properties:
        _id:
          type: string
        topicId:
          type: string
        topicName:
          type: string
        word:
          type: string
        meaning_en:
          type: string
        meaning_vi:
          type: string
        image:
          type: string
        audio:
          type: string
        example:
          type: string
        spelling:
          type: string
        isSaving:
          type: boolean
    Vocab:
      type: object
      properties:
        _id:
          type: string
        topicId:
          type: string
        word:
          type: string
        meaning_en:
          type: string
        meaning_vi:
          type: string
        image:
          type: string
        audio:
          type: string
        example:
          type: string
        spelling:
          type: string
        type:
          type: string
    CompleteVocabDTO:
      type: object
      properties:
        topicId:
          type: string
        vocabId:
          type: string
    User:
      type: object
      properties:
        _id:
          type: string
        email:
          type: string
        name:
          type: string
        avatar:
          type: string
        status:
          type: string
          enum:
            - ACTIVE
            - PENDING
            - SUSPENDED
        created_at:
          type: string
        updated_at:
          type: string
        isAdmin:
          type: boolean
    Post:
      type: object
      properties:
        _id:
          type: string
        creator:
          id:
            type: string
          name:
            type: string
          avatar:
            type: string
        content:
          type: string
        contentImage:
          type: array
          items:
            type: string
        totalLike:
          type: array
          items:
            type: string
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        created_at:
          type: string
        updated_at:
          type: string
    CreatePostDTO:
      type: object
      properties:
        creator:
          id:
            type: string
          name:
            type: string
          avatar:
            type: string
        content:
          type: string
        contentImage:
          type: array
          items:
            type: string
    Comment:
      type: object
      properties:
        _id:
          type: string
        content:
          type: string
        totalLike:
          type: array
          items:
            type: string
        creator:
          id:
            type: string
          name:
            type: string
          avatar:
            type: string
        created_at:
          type: string
        updated_at:
          type: string
    CreateCommentDTO:
      type: object
      properties:
        content:
          type: string
        creator:
          id:
            type: string
          name:
            type: string
          avatar:
            type: string
